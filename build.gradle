plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '1_03'
group = 'mett.palemannie.squakeport_1_19_4' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'squakeport_1_19_4'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2023.06.26-1.19.4'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'squakeport_1_19_4'
            arg "-mixin.config=squakeport_1_19_4.mixins.json"

            mods {
                squakeport_1_19_4 {
                    source sourceSets.main
                }
            }
        }

        server {

            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'squakeport_1_19_4'
            arg "-mixin.config=squakeport_1_19_4.mixins.json"

            mods {
                squakeport_1_19_4 {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'squakeport_1_19_4'

            mods {
                squakeport_1_19_4 {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'squakeport_1_19_4', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                squakeport_1_19_4 {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    // MixinGradle Settings
    config 'squakeport_1_19_4.mixins.json'
    sourceSets {
        main {
            ext.refMap = "squakeport_1_19_4.mixins-refmap.json"
        }
    }
    debug.verbose = true
    debug.export = true
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.1.16'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "squakeport_1_19_4",
                "Specification-Vendor"    : "squakeport_1_19_4areus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "squakeport_1_19_4areus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs": "squakeport_1_19_4.mixins.json"
        ])
    }
    rename 'mixin.refmap.json', 'squakeport_1_19_4.mixins-refmap.json'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
